// <auto-generated />
using System;
using Battleship.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Battleship.Data.Migrations
{
    [DbContext(typeof(BattleshipDbContext))]
    partial class BattleshipDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Battleship.Core.Entities.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("Battleship.Core.Entities.BoardShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<bool>("Destroyed")
                        .HasColumnType("bit");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<int>("Endpoint")
                        .HasColumnType("int");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.Property<int>("StartPoint")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.HasIndex("ShipId");

                    b.ToTable("BoardShips");
                });

            modelBuilder.Entity("Battleship.Core.Entities.Game", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDateUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Battleship.Core.Entities.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<int>("AttackedBoardId")
                        .HasColumnType("int");

                    b.Property<string>("DestroyedShipName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Field")
                        .HasColumnType("int");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OffensivePlayerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AttackedBoardId");

                    b.HasIndex("GameId");

                    b.HasIndex("OffensivePlayerId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("Battleship.Core.Entities.Player", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Battleship.Core.Entities.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Length = 5,
                            Name = "Carrier"
                        },
                        new
                        {
                            Id = 2,
                            Length = 4,
                            Name = "Battleship"
                        },
                        new
                        {
                            Id = 3,
                            Length = 3,
                            Name = "Cruiser"
                        },
                        new
                        {
                            Id = 4,
                            Length = 3,
                            Name = "Submarine"
                        },
                        new
                        {
                            Id = 5,
                            Length = 2,
                            Name = "Destroyer"
                        });
                });

            modelBuilder.Entity("Battleship.Core.Entities.Board", b =>
                {
                    b.HasOne("Battleship.Core.Entities.Game", "Game")
                        .WithMany("Boards")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Battleship.Core.Entities.Player", "Player")
                        .WithMany("Boards")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Battleship.Core.Entities.BoardShip", b =>
                {
                    b.HasOne("Battleship.Core.Entities.Board", "Board")
                        .WithMany("BoardShips")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Battleship.Core.Entities.Ship", "Ship")
                        .WithMany("BoardShips")
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("Battleship.Core.Entities.Move", b =>
                {
                    b.HasOne("Battleship.Core.Entities.Board", "AttackedBoard")
                        .WithMany("Moves")
                        .HasForeignKey("AttackedBoardId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Battleship.Core.Entities.Game", "Game")
                        .WithMany("Moves")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Battleship.Core.Entities.Player", "OffensivePlayer")
                        .WithMany("Moves")
                        .HasForeignKey("OffensivePlayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AttackedBoard");

                    b.Navigation("Game");

                    b.Navigation("OffensivePlayer");
                });

            modelBuilder.Entity("Battleship.Core.Entities.Board", b =>
                {
                    b.Navigation("BoardShips");

                    b.Navigation("Moves");
                });

            modelBuilder.Entity("Battleship.Core.Entities.Game", b =>
                {
                    b.Navigation("Boards");

                    b.Navigation("Moves");
                });

            modelBuilder.Entity("Battleship.Core.Entities.Player", b =>
                {
                    b.Navigation("Boards");

                    b.Navigation("Moves");
                });

            modelBuilder.Entity("Battleship.Core.Entities.Ship", b =>
                {
                    b.Navigation("BoardShips");
                });
#pragma warning restore 612, 618
        }
    }
}
